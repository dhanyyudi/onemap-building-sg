name: OneMap SG Building Data Update

on:
  schedule:
    - cron: "0 0 15 * *" # Run on the 15th day of each month at midnight UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  update-onemap-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests tqdm aiohttp nest_asyncio asyncio logging

      - name: Get current date
        id: date
        run: echo "date=$(date +'%d%m%Y')" >> $GITHUB_OUTPUT

      - name: Download and process OneMap data
        run: |
          # Create logs directory if it doesn't exist
          mkdir -p logs

          # Run download script with logging
          python scripts/onemap_building_download.py \
            --output_file "data/onemap_${{ steps.date.outputs.date }}.csv" \
            2>&1 | tee logs/download_${{ steps.date.outputs.date }}.log

      - name: Compare with previous data
        run: |
          python scripts/onemap_building_compare.py \
            --previous_file "data/onemap_04042025.csv" \
            --current_file "data/onemap_${{ steps.date.outputs.date }}.csv" \
            --diff_output "data/differences_onemap_04042025-${{ steps.date.outputs.date }}.csv" \
            2>&1 | tee logs/compare_${{ steps.date.outputs.date }}.log

      - name: Process and correct differences
        run: |
          python scripts/onemap_building_correct.py \
            --input_file "data/differences_onemap_04042025-${{ steps.date.outputs.date }}.csv" \
            --output_file "data/correction_differences_onemap_04042025-${{ steps.date.outputs.date }}.csv" \
            2>&1 | tee logs/correct_${{ steps.date.outputs.date }}.log

      # Use the latest version of upload-artifact to fix previous issues
      - name: Archive all results
        uses: actions/upload-artifact@v4
        with:
          name: onemap-building-data-${{ github.run_id }}
          path: |
            data/onemap_${{ steps.date.outputs.date }}.csv
            data/differences_onemap_04042025-${{ steps.date.outputs.date }}.csv
            data/correction_differences_onemap_04042025-${{ steps.date.outputs.date }}.csv
            logs/*.log
          retention-days: 30

      - name: Commit results to repository
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'

          # Check git status before any changes
          echo "======= Git Status Before ======="
          git status

          # Get timestamp from previous step
          TIMESTAMP="${{ steps.date.outputs.date }}"
          PREV_DATE="04042025"

          # Create directories if they don't exist
          mkdir -p data logs

          # Check for OneMap data files to commit
          if [ -f "data/onemap_${TIMESTAMP}.csv" ]; then
            # Check if we have a difference file
            DIFF_FILE="data/differences_onemap_${PREV_DATE}-${TIMESTAMP}.csv"
            
            if [ -f "$DIFF_FILE" ]; then
              # Check for corrected difference file
              CORR_FILE="data/correction_differences_onemap_${PREV_DATE}-${TIMESTAMP}.csv"
              
              # Add all relevant files
              git add "data/onemap_${TIMESTAMP}.csv"
              git add "$DIFF_FILE"
              git add "logs/*.log"
              
              if [ -f "$CORR_FILE" ]; then
                git add "$CORR_FILE"
              fi
              
              # Commit with informative message
              git commit -m "Update OneMap building data ${TIMESTAMP} with differences from ${PREV_DATE}" || echo "No changes to commit"
            else
              # Just new data, no previous comparison
              git add "data/onemap_${TIMESTAMP}.csv"
              git add "logs/*.log"
              git commit -m "Add new OneMap building data ${TIMESTAMP}" || echo "No changes to commit"
            fi
            
            # Try push
            echo "======= Git Push ======="
            git push origin main || echo "First push attempt failed"
            
            # If push fails, try again with pull-push sequence
            if [ $? -ne 0 ]; then
              echo "First push failed, trying pull-then-push sequence..."
              git pull --rebase origin main || echo "Pull failed"
              git push origin main || echo "Second push attempt failed"
              
              # If still fails, try with force option as last resort
              if [ $? -ne 0 ]; then
                echo "Trying force push as fallback..."
                git push -f origin main || echo "Force push also failed"
              fi
            fi
            
            echo "Successfully committed OneMap building data files"
          else
            echo "No OneMap data file found for today (${TIMESTAMP})"
          fi
